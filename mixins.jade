mixin php()
  - var prevBuf = buf
  - buf = []
  - block()
  - var blockResult = buf.join('')
  - buf = prevBuf
  - var placehold_matches=blockResult.match(/{%.*?}/g), i=0;
  != blockResult.split(/{%.*?}/g).reduce((a,b)=>a+_php_print_var((tmp=placehold_matches[i++]).substr(2, tmp.length-3))+b).replace(/\?><\?php/g, '')

mixin php-wrap()
  <?php 
  block
  ?>
mixin php-html()
  +php-wrap
    |{
  block
  +php-wrap
    |}
mixin php-function(name, args)
  +php-wrap
    |!{name} (!{_php_prepare_var(args)}) 
  +php-html
    block

mixin if(condition)
  +php-function('if', condition)
    block
mixin else()
  +php-wrap
    |else 
  +php-html
    block

mixin switch(condition)
  +php-wrap
    |switch(!{condition}) 
  +php-html
    block
mixin case(variant)
  +php-wrap
    |case (!{variant}) :
  +php-html
    block
  +php-wrap
    |break;
mixin default()
  +php-wrap
    |default :
  +php-html
    block
  +php-wrap
    |break;

mixin foreach(condition)
  +php-function('foreach', condition)
    block

mixin set(name, value)
  +php-wrap
    |$!{name} = !{value};

- function _php_prepare_var(str) {
-   function modify(str) {
-     str = str.split('|')
-     var variable = '$' + str.shift().replace(/\./g, '->')
-     str.forEach(function(func){
-       variable = func + '(' + variable + ')'
-     })
-     return variable
-   }
-   return str.split(' ').map(function(part){
-     return /^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*(\.|\||$)/.test(part) && !/^(a(bstract|nd|rray|s))|(c(a(llable|se|tch)|l(ass|one)|on(st|tinue)))|(d(e(clare|fault)|ie|o))|(e(cho|lse(if)?|mpty|nd(declare|for(each)?|if|switch|while)|val|x(it|tends)))|(f(inal|or(each)?|unction))|(g(lobal|oto))|(i(f|mplements|n(clude(_once)?|st(anceof|eadof)|terface)|sset))|(n(amespace|ew))|(p(r(i(nt|vate)|otected)|ublic))|(re(quire(_once)?|turn))|(s(tatic|witch))|(t(hrow|r(ait|y)))|(u(nset|se))|(__halt_compiler|break|list|(x)?or|var|while)$/.test(part) ? modify(part) : part
-   }).join(' ').trim()
- }

- function _php_print_var(str) {
-   str = str.split(':')
-   out = _php_prepare_var(str[0])
-   if (str[1]) {
-     _then = str[2] ? _php_prepare_var(str[1]) : out;
-     _else = str[2] ? _php_prepare_var(str[2]) : _php_prepare_var(str[1]);
-     out = out + '?' + _then + ':' + _else
-   }
-   return '<?=' + out + ';?>'
- }
